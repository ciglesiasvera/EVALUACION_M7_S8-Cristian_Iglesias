CUE: CONSULTAS PERSONALIZADAS

DRILLING: PROFUNDIZANDO EN EL USO DE MANAGER.RAW()

Para resolver este ejercicio, anteriormente debe haber revisado la lectura y los videos del CUE:
Consultas Personalizadas.

EJERCICIO:

Partiendo del modelo creado en el Rebound Exercise de este CUE:

1. Obtenga los campos de nombre, precio, y fecha de vencimiento de los productos.

Salida:
1  El producto: Colgate 360 se vence en 2024-02-29, con un precio de:
2  1850.00.
3  El producto: Speed Stick 27/7 se vence en 2023-04-14, con un precio de:
4  4500.00.
5  El producto: Protex Aloe se vence en 2023-10-27, con un precio de:
6  1250.00.
7  El producto: Downy Aroma Floral se vence en 2025-05-22, con un precio
8  de: 3500.00.
9  El producto: Crest Premium se vence en 2024-11-01, con un precio de:
10 2500.00.
11 El producto: Ariel Suavisante se vence en 2027-06-11, con un precio de:
12 1500.00.

R:
from productos.models import Producto

productos = Producto.objects.all()

if productos.exists():
    for producto in productos:
        print(f"El producto: {producto.nombre} se vence en {producto.f_vencimiento}, con un precio de:")
        print(f"{producto.precio}.")
else:
    print("No hay productos en la base de datos.")

for producto in productos:
    print(f"El producto: {producto.nombre} se vence en {producto.f_vencimiento}, con un precio de:")
    print(f"{producto.precio}.")


2. Obtenga los productos donde el precio sea menor o igual a 2500, y muestre solo los campos de 
nombre y precio, respectivamente. 
Salida:
1 El producto: Colgate 360 tiene un precio de: 1850.00.
2 El producto: Protex Aloe tiene un precio de: 1250.00.
3 El producto: Crest Premium tiene un precio de: 2500.00.
4 El producto: Ariel Suavisante tiene un precio de: 1500.00.

R:
from productos.models import Producto

productos = Producto.objects.filter(precio__lte=2500).values('nombre', 'precio')

for producto in productos:
    print(f"El producto: {producto['nombre']} tiene un precio de: {producto['precio']}.")


3. Modifique haciendo uso de SQL personalizado y cursores, la fábrica con nombre P&G en el país que 
se encuentra asignada a EEUU, o a Canadá.
Salida:
1 [('Canadá',)]

R:
from django.db import connection

sql_update = """
    UPDATE productos_fabrica
    SET pais = 'Canadá'
    WHERE nombre = 'P&G' AND pais = 'USA'
"""

with connection.cursor() as cursor:
    cursor.execute(sql_update)

sql_select = """
    SELECT pais
    FROM productos_fabrica
    WHERE nombre = 'P&G'
"""

with connection.cursor() as cursor:
    cursor.execute(sql_select)
    result = cursor.fetchall()

print(result)